<h3>Matt's Financial Dashboard</h3>
    <h4 align="center">Debt Payoff</h4>
    <%= column_chart [ 
	{ name: "HELOC",  data: @debts.order(:transactiondate).group(:transactiondate).sum(:heloc) },
	{ name: "Escrow",  data: @debts.order(:transactiondate).group(:transactiondate).sum(:escrowdebt) },
	{ name: "401k",  data: @debts.order(:transactiondate).group(:transactiondate).sum(:loanremaining) } ], 
	library: { curveType: "function", colors: ["red", "blue", "orange"]},  
	stacked:true, discrete:true, ytitle: "$s", xtitle: "Date", min: 0

%>

<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Assets</h4>
    <%= column_chart [ 
	{ name: "Assets",  data: @networth.order(:dateofrecord).limit(60).group(:dateofrecord).sum(:assets) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:false, discrete:true, ytitle: "$s", min: 780000, xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Debts</h4>
    <%= column_chart [ 
	{ name: "Debts",  data: @networth.order(:dateofrecord).limit(60).group(:dateofrecord).sum(:debts) } ], 
	library: { curveType: "function", colors: ["red"]},  
	stacked:false, discrete:true, ytitle: "$s", xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Net Worth</h4>
    <%= column_chart [ 
	{ name: "Net Worth",  data: @networth.order(:dateofrecord).limit(60).group(:dateofrecord).sum(:networth) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:false, discrete:true, ytitle: "$s", min: 760000, xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>

    <h4 align="center">Investments</h4>
    <%= column_chart [ 
	{ name: "AON",  data: @accounts.order(:dateofrecord).limit(50).group(:dateofrecord).sum(:aonacct) },
	{ name: "ESPP",  data: @accounts.order(:dateofrecord).limit(50).group(:dateofrecord).sum(:ssbacct) },
	{ name: "Loan",  data: @accounts.order(:dateofrecord).limit(50).group(:dateofrecord).sum(:loanacct) } ], 
	library: { curveType: "function", colors: ["green", "blue", "orange"]},  
	stacked:true, discrete:true, ytitle: "$s", min: 375000, xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>

    <h4 align="center">Change</h4>
    <%= column_chart [ 
	{ name: "Daily Change",  data: @accounts.order(:dateofrecord).limit(50).group(:dateofrecord).sum(:change) } ], 
	library: { curveType: "function", colors: ["black"]},  
	stacked:true, discrete:true, ytitle: "$s", xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>

    <h4 align="center">Total Savings Over Time</h4>
    <%= column_chart [ 
	{ name: "Total Value", data: @savings.order(:transactiondate).group(:transactiondate).sum(:totalsavings) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:true, discrete:true, ytitle: "$s", xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Retirement Value</h4>
    <%= column_chart [ 
	{ name: "Total Value", data: @savings.order(:transactiondate).group(:transactiondate).sum(:totalvalue) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:true, discrete:true, ytitle: "$s", xtitle: "Date"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Transactions</h4>
    <%= column_chart [ 
	{ name: "Amount",  data: @savings.order(:transactiondate).group(:transactiondate).sum(:amount) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:true, discrete:true, ytitle: "$s", xtitle: "Date"

%>

<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>

<h3>Retirement Plans</h3>
    <h4 align="center">Assets</h4>
This retirement plan assumes savings for five years and is based on the 401k master plan and $108k COL
    <%= column_chart [ 
	{ name: "Assets",  data: @plan1s.group(:age).sum(:assets) },
	{ name: "COL",  data: @plan1s.group(:age).sum(:col) } ], 
	library: { curveType: "function", colors: ["green"]},  
	stacked:false, discrete:true, ytitle: "$s", xtitle: "Age"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Assets</h4>
This retirement plan assumes no savings and is based on the 401k master plan and $90k COL. 
    <%= column_chart [ 
	{ name: "Assets",  data: @plan2s.group(:age).sum(:assets) }, 
	{ name: "COL",  data: @plan2s.group(:age).sum(:col) } ],
	library: { curveType: "function", colors: ["green"]},  
	stacked:false, discrete:true, ytitle: "$s", xtitle: "Age"

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4 align="center">Assets</h4>
This retirement plan assumes savings and is based on the 401k pessimistic plan and $95k COL
    <%= column_chart [ 
	{ name: "Assets",  data: @plan3s.group(:age).sum(:assets) }, 
	{ name: "COL",  data: @plan3s.group(:age).sum(:col) } ],
	library: { curveType: "function", colors: ["green"]},  
	stacked:false, discrete:true, ytitle: "$s", xtitle: "Age"

%>

<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h3 align="center">Budgets</h3>

    <%= column_chart [ 
	{ name: "401k",  data: @budgets.group(:year).sum(:investment401k) },
	{ name: "ESPP",  data: @budgets.group(:year).sum(:investmentespp) },
	{ name: "Remaining",  data: @budgets.group(:year).sum(:remaining) },
	{ name: "Bonus",  data: @budgets.group(:year).sum(:bonus) },
	{ name: "Taxes",  data: @budgets.group(:year).sum(:taxes) },
	{ name: "Insurance",  data: @budgets.group(:year).sum(:healthinsurance) },
	{ name: "Expenses",  data: @budgets.group(:year).sum(:expenses) },
	{ name: "Housing",  data: @budgets.group(:year).sum(:housing) }],
   	library: { colors: ["green", "chartreuse", "darkgreen", "lightgreen", "red", "orange", "pink", "purple" ]},
	stacked:false, discrete:true, ytitle: "$s", xtitle: "Budgets"

%>


<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>

    <h4>2015</h4>
    <%= 

	pie_chart({
		   "401k" => @budgets.where(year: "2015").sum(:investment401k),
		   "ESPP" => @budgets.where(year: "2015").sum(:investmentespp),
		   "Remaining" => @budgets.where(year: "2015").sum(:remaining),
		   "Bonus" => @budgets.where(year: "2015").sum(:bonus),
		   "Taxes" => @budgets.where(year: "2015").sum(:taxes), 
		   "Insurance" => @budgets.where(year: "2015").sum(:healthinsurance),
		   "Expenses" => @budgets.where(year: "2015").sum(:expenses),
		   "Housing" => @budgets.where(year: "2015").sum(:housing)},
		   library: { colors: ["green", "chartreuse", "darkgreen", "lightgreen", "red", "orange", "darkred", "purple" ]} )
    %>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4>2016</h4>
    <%= 

	pie_chart({
		   "401k" => @budgets.where(year: "2016").sum(:investment401k),
		   "ESPP" => @budgets.where(year: "2016").sum(:investmentespp),
		   "Remaining" => @budgets.where(year: "2016").sum(:remaining),
		   "Bonus" => @budgets.where(year: "2016").sum(:bonus),
		   "Taxes" => @budgets.where(year: "2016").sum(:taxes), 
		   "Insurance" => @budgets.where(year: "2016").sum(:healthinsurance),
		   "Expenses" => @budgets.where(year: "2016").sum(:expenses),
		   "Housing" => @budgets.where(year: "2016").sum(:housing)},
		   library: { colors: ["green", "chartreuse", "darkgreen", "lightgreen", "red", "orange", "darkred", "purple" ]} )
    %>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4>2017</h4>
    <%= 

	pie_chart({
		   "401k" => @budgets.where(year: "2017").sum(:investment401k),
		   "ESPP" => @budgets.where(year: "2017").sum(:investmentespp),
		   "Remaining" => @budgets.where(year: "2017").sum(:remaining),
		   "Bonus" => @budgets.where(year: "2017").sum(:bonus),
		   "Taxes" => @budgets.where(year: "2017").sum(:taxes), 
		   "Insurance" => @budgets.where(year: "2017").sum(:healthinsurance),
		   "Expenses" => @budgets.where(year: "2017").sum(:expenses),
		   "Housing" => @budgets.where(year: "2017").sum(:housing)},
		   library: { colors: ["green", "chartreuse", "darkgreen", "lightgreen", "red", "orange", "darkred", "purple" ]} )
    %>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
    <h4>Post 2016 Budget Breakdown</h4>

<%=
	require 'rubyXL'

	workbook = RubyXL::Parser.parse("./finance.xlsx")
	sheet_budget = workbook["Analysis"] 


	om_row = 21	# 0 based, modify this based on the particular spreadsheet "row 5 = 4"
	om_column = 0	# 0 based, modify this based on the particular spreadsheet "column h = 7"

	budget = Hash.new
	label = sheet_budget[om_row][om_column].value
	value = sheet_budget[om_row][om_column+1].value
	budget.store(label,value)
	label = sheet_budget[om_row+1][om_column].value
	value = sheet_budget[om_row+1][om_column+1].value
	budget.store(label,value)
	label = sheet_budget[om_row+2][om_column].value
	value = sheet_budget[om_row+2][om_column+1].value
	budget.store(label,value)
	label = sheet_budget[om_row+3][om_column].value
	value = sheet_budget[om_row+3][om_column+1].value
	budget.store(label,value)
	budget_array = budget.to_a
	@options = {"library" => {"pieSliceText" => "value", "tooltip" => {"text" => "value"},colors: ["darkred", "green", "chartreuse", "red"]}}
	pie_chart budget_array, @options

%>
<p>&nbsp;</p>
<hr>
<p>&nbsp;</p>
<a href="/database/clear">Reload the database</a>
